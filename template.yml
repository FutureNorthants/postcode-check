# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  postcode-lookup

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html

Parameters:
  Stage:
    Type: String
    Default: dev
  TableName:
    Type: String
    Default: nccpostcodes

Resources:
  PostcodeCheckFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/getauthority/
      Handler: index.lambdaHandler
      Runtime: nodejs12.x
      Events:
        PostcodeCheck:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId:
              Ref: PostcodeCheckApiJSON
            Path: /check-postcode/{postcode}
            Method: get
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBReadOnlyAccess
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName

  PostcodeCheckApiJSON:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      Cors:
        AllowMethods: "'GET'"
        AllowOrigin: "'*'"
      OpenApiVersion: '2.0'
      # Auth:
      #   ApiKeyRequired: true

  # ## generate apikey
  # ApiKey:
  #   Type: AWS::ApiGateway::ApiKey
  #   Properties:
  #     Name: !Sub
  #     - '${Stage}-${StackName}-apikey'
  #     - Stage: !Ref Stage
  #       StackName: !Ref AWS::StackName
  #     Description: "Api key for run step function api"
  #     Enabled: true
  #     StageKeys:
  #       - RestApiId: !Ref PostcodeCheckApi
  #         StageName: !Ref Stage

  # ApiUsagePlan:
  #   Type: "AWS::ApiGateway::UsagePlan"
  #   Properties:
  #     ApiStages:
  #       - ApiId: !Ref PostcodeCheckApi
  #         Stage: !Ref Stage
  #     Description: !Join [" ", [{"Ref": "AWS::StackName"}, "usage plan"]]
  #     Quota:
  #       Limit: 100
  #       Period: MONTH
  #     UsagePlanName: !Join ["", [{"Ref": "AWS::StackName"}, "-usage-plan"]]

  # ApiUsagePlanKey:
  #   Type: "AWS::ApiGateway::UsagePlanKey"
  #   DependsOn: 
  #     - PostcodeCheckApi
  #   Properties:
  #     KeyId: !Ref ApiKey
  #     KeyType: API_KEY
  #     UsagePlanId: !Ref ApiUsagePlan

